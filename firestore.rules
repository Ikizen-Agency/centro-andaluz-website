/**
 * @fileOverview Firestore Security Rules for Centro Andaluz de la Habana.
 *
 * Core Philosophy:
 * This ruleset provides open read access to events, members, and blog posts, while restricting write access to prevent unauthorized modifications.
 *
 * Data Structure:
 * - /events/{eventId}: Stores publicly accessible event data.
 * - /members/{memberId}: Stores publicly accessible member data.
 * - /blog_posts/{blogPostId}: Stores publicly accessible blog post data.
 *
 * Key Security Decisions:
 * - Public read access is granted to all collections.
 * - All write operations are explicitly denied to prevent unauthorized data modification.
 * - The design avoids `get()` calls within rules for better performance and scalability.
 * - The rules do not implement granular user roles or ownership, focusing on basic data protection.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows anyone to read event data, but restricts creation, updates, and deletion.
     * @path /events/{eventId}
     * @allow (get, list): if true; // Any user can read events.
     * @deny (create, update, delete): if false; // No one can create, update, or delete events.
     * @principle Grants public read access while preventing unauthorized data modification.
     */
    match /events/{eventId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows anyone to read member data, but restricts creation, updates, and deletion.
     * @path /members/{memberId}
     * @allow (get, list): if true; // Any user can read members.
     * @deny (create, update, delete): if false; // No one can create, update, or delete members.
     * @principle Grants public read access while preventing unauthorized data modification.
     */
    match /members/{memberId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows anyone to read blog post data, but restricts creation, updates, and deletion.
     * @path /blog_posts/{blogPostId}
     * @allow (get, list): if true; // Any user can read blog posts.
     * @deny (create, update, delete): if false; // No one can create, update, or delete blog posts.
     * @principle Grants public read access while preventing unauthorized data modification.
     */
    match /blog_posts/{blogPostId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}