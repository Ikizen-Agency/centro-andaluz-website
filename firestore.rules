/**
 * @fileoverview Firestore Security Rules for Centro Andaluz de la Habana.
 *
 * Core Philosophy:
 * This ruleset allows any authenticated user to read and write any data.
 * This is a prototyping configuration and is not suitable for production use.
 *
 * Data Structure:
 * - /events/{eventId}: Stores event data.
 * - /members/{memberId}: Stores member data.
 * - /blog_posts/{blogPostId}: Stores blog post data.
 *
 * Key Security Decisions:
 * - All reads and writes are allowed for any authenticated user.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows any authenticated user to read and write event data.
     * @path /events/{eventId}
     * @allow (create) - Any authenticated user can create an event.
     * @allow (update) - Any authenticated user can update an event.
     * @allow (delete) - Any authenticated user can delete an event.
     * @allow (get) - Any user can get an event.
     * @allow (list) - Any user can list events.
     * @deny (none) - No requests are denied.
     * @principle Allows any authenticated user to perform any operation on events.
     */
    match /events/{eventId} {
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
      allow get: if true;
      allow list: if true;
    }

    /**
     * @description Allows any authenticated user to read and write member data.
     * @path /members/{memberId}
     * @allow (create) - Any authenticated user can create a member.
     * @allow (update) - Any authenticated user can update a member.
     * @allow (delete) - Any authenticated user can delete a member.
     * @allow (get) - Any user can get a member.
     * @allow (list) - Any user can list members.
     * @deny (none) - No requests are denied.
     * @principle Allows any authenticated user to perform any operation on members.
     */
    match /members/{memberId} {
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
      allow get: if true;
      allow list: if true;
    }

    /**
     * @description Allows any authenticated user to read and write blog post data.
     * @path /blog_posts/{blogPostId}
     * @allow (create) - Any authenticated user can create a blog post.
     * @allow (update) - Any authenticated user can update a blog post.
     * @allow (delete) - Any authenticated user can delete a blog post.
     * @allow (get) - Any user can get a blog post.
     * @allow (list) - Any user can list blog posts.
     * @deny (none) - No requests are denied.
     * @principle Allows any authenticated user to perform any operation on blog posts.
     */
    match /blog_posts/{blogPostId} {
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
      allow get: if true;
      allow list: if true;
    }
  }

  function isSignedIn() {
    return request.auth != null;
  }
}