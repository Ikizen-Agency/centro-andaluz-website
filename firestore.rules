/**
 * @fileoverview Firestore Security Rules for the Centro Andaluz de la Habana application.
 *
 * Core Philosophy: This ruleset prioritizes security by explicitly denying all read and write access to all collections, effectively "locking down" the database. This is done for debugging purposes as per the user's request. No data validation is performed, as the focus is purely on restricting access during this phase.
 *
 * Data Structure:
 * - /events/{eventId}: Stores event data.
 * - /members/{memberId}: Stores member data.
 * - /blog_posts/{blogPostId}: Stores blog post data.
 *
 * Key Security Decisions:
 * - ALL read and write access is denied across the board.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Denies all access to event data for debugging.
     * @path /events/{eventId}
     * @allow (none)
     * @deny (any)
     * @principle Debugging rules in place; no access allowed.
     */
    match /events/{eventId} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Denies all access to member data for debugging.
     * @path /members/{memberId}
     * @allow (none)
     * @deny (any)
     * @principle Debugging rules in place; no access allowed.
     */
    match /members/{memberId} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Denies all access to blog post data for debugging.
     * @path /blog_posts/{blogPostId}
     * @allow (none)
     * @deny (any)
     * @principle Debugging rules in place; no access allowed.
     */
    match /blog_posts/{blogPostId} {
      allow get: if false;
      allow list: if false;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}